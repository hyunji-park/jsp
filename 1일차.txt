스프링 1일차

1. Framework
- Framework = 틀, 구조
- 특정 행위나 개발을 위한 형태와 필요한 기능을 사전에 구현하여 제공하는 것
- 선택적 영역이고 필수가 아님

2. Spring Framework
- 웹 서비스 개발을 위해 만들어진 framework

3.MVC
- Model : 데이터를 담아 놓음(DTO, VO, bean, Map, List)
- View : 보여준다(JSP)
- Controller : 조작, 동작, 사블릿 구현

4. Maven
- 통합 라이브러리 관리(jar 자동 다운로드) 및 배포 지원 도구(버전관리)

5. Resolver
- Resolver : 특정 이벤트를 중간에 가로챔
- InternalResourceViewResolver : view 정보가 넘어올 경우 가로챔, view 정보 앞과 뒤에 문자열 추가
- return "home" -> view 정보
- ViewResolver -> "/WEB-INF/views/" + "home" + "jsp"
- view정보 -> "/WEB-INF/views/home.jsp"

6. EL tag 활용
- param.~~ => 이전 화면(다른 주소)에서 넘어오는 데이터
- ~~~(이름만) => controller에서 넘어오는 데이터

7. RequestMapping 
- @RequestMapping(value = "주소명")
- 주소와 메소드를 연결
- localhost:포트번호/마지막 패키지명/주소명

8. 파라미터 처리방식 4가지
- HttpServletRequest req => System.out.println(req.getParameter("msg"));
- @RequestParam String msg => System.out.println(msg); //넘어오는 데이터 중 변수명과 동일한 키 값을 가진 데이터를 넣어준다.
- @RequestParam(value = "msg") String a => System.out.println(a); //넘어오는 데이터 중 값과 키가 일치하는 데이터를 변수에 넣는다. 
- @RequestParam HashMap<String, String> params => System.out.println(params.get("msg")); //넘어오는 데이터들을 Map에 담는다.

* @RequestParam(required = false) : 값이 없어도 주소를 직접 입력해서 접속 가능 => 에러 발생 가능성 있음, 값이 없으면 null로 채움